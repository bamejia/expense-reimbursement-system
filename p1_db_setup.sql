----------------------------------
-- Grants privledge to user/schema
----------------------------------
GRANT UNLIMITED TABLESPACE TO P1;
GRANT CREATE SESSION TO P1;


----------------------------------
-- Creating Tables
----------------------------------
CREATE TABLE EMPLOYEES(
	EMPLOYEE_ID NUMBER(9) PRIMARY KEY,
	USERNAME VARCHAR(20) UNIQUE NOT NULL,
	PASSWORD VARCHAR(20) NOT NULL,
	FIRST_NAME VARCHAR(20) NOT NULL,
	LAST_NAME VARCHAR(20) NOT NULL
);

CREATE TABLE MANAGERS(
	MANAGER_ID NUMBER(9) PRIMARY KEY,
	USERNAME VARCHAR(20) UNIQUE NOT NULL,
	PASSWORD VARCHAR(20) NOT NULL,
	FIRST_NAME VARCHAR(20) NOT NULL,
	LAST_NAME VARCHAR(20) NOT NULL
);

CREATE TABLE REIMBURSEMENT_REQUESTS(
	REQUEST_ID NUMBER(9) PRIMARY KEY,
	EMPLOYEE_ID NUMBER(9) NOT NULL,
	REQUEST_AMOUNT NUMBER(12) NOT NULL,
	REQUEST_STATUS VARCHAR(12) NOT NULL,
	FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID)
);

ALTER TABLE REIMBURSEMENT_REQUESTS 
RENAME COLUMN AMOUNT TO REQUEST_AMOUNT
ALTER TABLE REIMBURSEMENT_REQUESTS 
RENAME COLUMN STATUS TO REQUEST_STATUS



----------------------------------
-- Creating Auto generated Keys
----------------------------------
CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SQ_MANAGER_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SQ_REIMBURSEMENT_REQUEST_PK
START WITH 1
INCREMENT BY 1;



----------------------------------
-- Creating Triggers
----------------------------------
CREATE OR REPLACE TRIGGER TR_EMPLOYEE_PK
BEFORE INSERT ON EMPLOYEES
FOR EACH ROW
BEGIN 
	SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TR_MANAGER_PK
BEFORE INSERT ON MANAGERS
FOR EACH ROW
BEGIN 
	SELECT SQ_MANAGER_PK.NEXTVAL INTO :NEW.MANAGER_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TR_REIMBURSEMENT_REQUEST_PK
BEFORE INSERT ON REIMBURSEMENT_REQUESTS
FOR EACH ROW
BEGIN 
	SELECT SQ_REIMBURSEMENT_REQUEST_PK.NEXTVAL INTO :NEW.REQUEST_ID FROM DUAL;
END;



----------------------------------
-- Inserting Data
----------------------------------
INSERT INTO EMPLOYEES (USERNAME, PASSWORD, FIRST_NAME, LAST_NAME) 
VALUES ('tom95', 'password', 'Tom', 'Hanks');
INSERT INTO EMPLOYEES (USERNAME, PASSWORD, FIRST_NAME, LAST_NAME) 
VALUES ('user', 'pass', 'Fred', 'Savage');
INSERT INTO EMPLOYEES (USERNAME, PASSWORD, FIRST_NAME, LAST_NAME) 
VALUES ('yanny33', '!@#$', 'Jean', 'Lopez');


INSERT INTO MANAGERS (USERNAME, PASSWORD, FIRST_NAME, LAST_NAME) 
VALUES ('mod', '456', 'Norman', 'Diego');
INSERT INTO MANAGERS (USERNAME, PASSWORD, FIRST_NAME, LAST_NAME) 
VALUES ('pass', 'user', 'The', 'Guy');


INSERT INTO REIMBURSEMENT_REQUESTS (EMPLOYEE_ID, REQUEST_AMOUNT, REQUEST_STATUS)
VALUES ((SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE USERNAME = 'user'), 1000, 'PENDING') 
INSERT INTO REIMBURSEMENT_REQUESTS (EMPLOYEE_ID, REQUEST_AMOUNT, REQUEST_STATUS)
VALUES ((SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE USERNAME = 'user'), 3000, 'PENDING') 
INSERT INTO REIMBURSEMENT_REQUESTS (EMPLOYEE_ID, REQUEST_AMOUNT, REQUEST_STATUS)
VALUES ((SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE USERNAME = 'user'), 500, 'PENDING') 
INSERT INTO REIMBURSEMENT_REQUESTS (EMPLOYEE_ID, REQUEST_AMOUNT, REQUEST_STATUS)
VALUES ((SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE USERNAME = 'tom95'), 2000, 'PENDING') 
INSERT INTO REIMBURSEMENT_REQUESTS (EMPLOYEE_ID, REQUEST_AMOUNT, REQUEST_STATUS)
VALUES ((SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE USERNAME = 'tom95'), 5000, 'APPROVED') 

UPDATE REIMBURSEMENT_REQUESTS 
SET REQUEST_STATUS = 'DECLINED'
WHERE REQUEST_ID = 2



----------------------------------
-- Selecting Data
----------------------------------
SELECT DISTINCT * FROM (
SELECT E.EMPLOYEE_ID, E.USERNAME, E.PASSWORD, E.FIRST_NAME, E.LAST_NAME
FROM EMPLOYEES E JOIN REIMBURSEMENT_REQUESTS RR ON E.EMPLOYEE_ID = RR.EMPLOYEE_ID
WHERE RR.REQUEST_STATUS = 'PENDING'
) E


SELECT * FROM P1.EMPLOYEES

SELECT * FROM P1.MANAGERS m 

SELECT * FROM REIMBURSEMENT_REQUESTS rr 


SELECT RR.REQUEST_ID, RR.EMPLOYEE_ID, RR.REQUEST_AMOUNT, RR.REQUEST_STATUS
FROM p1.EMPLOYEES E JOIN p1.REIMBURSEMENT_REQUESTS RR ON E.EMPLOYEE_ID = RR.EMPLOYEE_ID
WHERE E.EMPLOYEE_ID = 2 AND RR.REQUEST_STATUS = 'PENDING'

SELECT RR.REQUEST_ID, RR.EMPLOYEE_ID, RR.REQUEST_AMOUNT, RR.REQUEST_STATUS
FROM p1.EMPLOYEES E JOIN p1.REIMBURSEMENT_REQUESTS RR ON E.EMPLOYEE_ID = RR.EMPLOYEE_ID
WHERE E.EMPLOYEE_ID = 1 AND (RR.REQUEST_STATUS = 'ACCEPTED' OR RR.REQUEST_STATUS = 'DECLINED')

SELECT * FROM P1.REIMBURSEMENT_REQUESTS

UPDATE p1.REIMBURSEMENT_REQUESTS 
SET REQUEST_STATUS = 'PENDING'
WHERE REQUEST_ID = 3

